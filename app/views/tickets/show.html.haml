#ticket
  %header
    %h1= @project.name

  %header
    %h2= @ticket.name

    %ul.actions
      - if policy(@ticket).update?
        %li= link_to 'Edit Ticket', [:edit, @project, @ticket], class: 'edit'
      - if policy(@ticket).destroy?
        %li= link_to 'Delete Ticket', [@project, @ticket], method: :delete,
          data: { confirmation: 'Are you sure you want to delete this ticket?' },
          class: 'delete'

  %table#attributes
    %tr
      %th Author:
      %td= @ticket.author.email
    %tr
      %th Created:
      %td= time_ago_in_words(@ticket.created_at) + ' ago'
    - if @ticket.state.present?
      %tr
        %th State:
        %td= render @ticket.state
    - if @ticket.tags.any?
      %tr#tags
        %th Tags:
        %td= render @ticket.tags, ticket: @ticket
    %tr#watchers
      %th Watchers:
      %td
        = toggle_watching_button(@ticket)
        %br/
        = @ticket.watchers.map(&:email).to_sentence
      
  = simple_format(@ticket.description)
  
  - if @ticket.attachments.any?
    %h4 Attachments
    .attachments
      - @ticket.attachments.each do |attachment|
        %p
          = link_to File.basename(attachment.file.url),
              attachment_path(attachment)
          (#{number_to_human_size(attachment.file.size)})

%header
  %h3 Comments

#comments
  - if @ticket.comments.persisted.any?
    = render @ticket.comments.persisted
  - else
    %p There are no comments for this ticket.

- if policy(@comment).create?
  = render 'comments/form', ticket: @ticket, comment: @comment
